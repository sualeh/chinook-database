<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>us.fatehi</groupId>
  <artifactId>chinook-database</artifactId>
  <packaging>jar</packaging>
  <version>2.2.1</version>
  <name>Chinook Database for Java</name>
  <description>Chinook database as a Java jar, for use in Java programs and Testcontainers</description>
  <url>https://www.schemacrawler.com</url>
  <inceptionYear>2020-2023</inceptionYear>
  <licenses>
    <license>
      <name>Eclipse Public License - v 1.0</name>
      <url>https://www.eclipse.org/legal/epl-v10.html</url>
    </license>
  </licenses>
  <developers>
    <developer>
      <name>Sualeh Fatehi</name>
      <id>sfatehi</id>
      <email>sualeh@hotmail.com</email>
      <organization>Sualeh Fatehi</organization>
      <roles>
        <role>All</role>
      </roles>
      <timezone>-5</timezone>
    </developer>
  </developers>
  <organization>
    <name>Sualeh Fatehi</name>
  </organization>
  <scm>
    <url>https://github.com/schemacrawler/chinook-database</url>
    <connection>scm:git:git://github.com/schemacrawler/chinook-database.git</connection>
  </scm>
  <distributionManagement>
    <snapshotRepository>
      <id>sonatype-nexus-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>sonatype-nexus</id>
      <name>Sonatype Nexus</name>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
    </repository>
  </distributionManagement>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>5.9.1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit-pioneer</groupId>
      <artifactId>junit-pioneer</artifactId>
      <version>1.9.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <version>2.2</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>6.0.8</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>6.0.8</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>6.0.8</version>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>1.18.0</version>
      <scope>test</scope>
    </dependency>


    <dependency>
      <groupId>com.microsoft.sqlserver</groupId>
      <artifactId>mssql-jdbc</artifactId>
      <version>12.2.0.jre8</version>
      <exclusions>
        <exclusion>
          <groupId>com.microsoft.azure</groupId>
          <artifactId>azure-keyvault</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>mssqlserver</artifactId>
      <version>1.18.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.ibm.db2</groupId>
      <artifactId>jcc</artifactId>
      <version>11.5.8.0</version>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>db2</artifactId>
      <version>1.18.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.6.0</version>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <version>1.18.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>8.0.30</version>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>mysql</artifactId>
      <version>1.18.3</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.oracle.database.jdbc.debug</groupId>
      <artifactId>ojdbc8_g</artifactId>
      <version>21.9.0.0</version>
      <exclusions>
        <exclusion>
          <groupId>com.oracle.database.jdbc</groupId>
          <artifactId>ojdbc8dms</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.oracle.database.jdbc.debug</groupId>
          <artifactId>ojdbc8dms_g</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.oracle.database.observability</groupId>
          <artifactId>dms</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>oracle-xe</artifactId>
      <version>1.18.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.xerial</groupId>
      <artifactId>sqlite-jdbc</artifactId>
      <version>3.41.2.2</version>
    </dependency>

    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
      <version>4.7.3</version>
    </dependency>

  </dependencies>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <skip.signing.artifacts>true</skip.signing.artifacts>
  </properties>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.3.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.2.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.11.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.5.0</version>
          <configuration>
            <source>17</source>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>1.6.13</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>3.1.0</version>
          <dependencies>
            <dependency>
              <groupId>org.xerial</groupId>
              <artifactId>sqlite-jdbc</artifactId>
              <version>3.41.2.2</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.4.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>.</directory>
              <includes>
                <include>pom.xml.versionsBackup</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <inherited>true</inherited>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-chinook-database-resources</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <get src="https://github.com/lerocha/chinook-database/archive/master.zip" dest="${project.build.directory}/lerocha-chinook-database.zip" skipexisting="true" quiet="true" />
                <unzip src="${project.build.directory}/lerocha-chinook-database.zip" dest="${project.build.directory}/lerocha-chinook-database-sql">
                  <patternset>
                    <include name="**/Chinook_*.sql" />
                  </patternset>
                  <mapper type="flatten" />
                </unzip>
                <copy todir="${project.build.directory}/generated-resources/chinook-database" overwrite="true" encoding="Cp1252" outputencoding="UTF-8">
                  <fileset dir="${project.build.directory}/lerocha-chinook-database-sql" includes="*Db2.sql" />
                </copy>
                <copy todir="${project.build.directory}/generated-resources/chinook-database" overwrite="true" encoding="UTF-16" outputencoding="UTF-8">
                  <fileset dir="${project.build.directory}/lerocha-chinook-database-sql" includes="*SqlServer*.sql" />
                </copy>
                <copy todir="${project.build.directory}/generated-resources/chinook-database" overwrite="true" encoding="ASCII" outputencoding="UTF-8">
                  <fileset dir="${project.build.directory}/lerocha-chinook-database-sql" includes="*PostgreSql*.sql" />
                </copy>
                <copy todir="${project.build.directory}/generated-resources/chinook-database" overwrite="true" encoding="UTF-8" outputencoding="UTF-8">
                  <filterchain>
                    <deletecharacters chars="&#xFEFF;" />
                  </filterchain>
                  <fileset dir="${project.build.directory}/lerocha-chinook-database-sql" includes="*MySql*.sql" />
                </copy>
                <copy todir="${project.build.directory}/generated-resources/chinook-database" overwrite="true" encoding="UTF-8" outputencoding="UTF-8">
                  <filterchain>
                    <deletecharacters chars="&#xFEFF;" />
                  </filterchain>
                  <fileset dir="${project.build.directory}/lerocha-chinook-database-sql" includes="*Oracle*.sql" />
                </copy>
                <copy todir="${project.build.directory}/generated-resources/chinook-database" overwrite="true" encoding="UTF-8" outputencoding="UTF-8">
                  <filterchain>
                    <deletecharacters chars="&#xFEFF;" />
                  </filterchain>
                  <fileset dir="${project.build.directory}/lerocha-chinook-database-sql" includes="*Sqlite*.sql" />
                </copy>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>generate-sqlite-database</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <java classname="us.fatehi.chinook_database.SQLiteGenerator" classpathref="maven.test.classpath">
                  <arg file="${project.build.directory}/chinook-database-${project.version}.sqlite" />
                </java>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-resource</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>add-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.build.directory}/generated-resources</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <inherited>true</inherited>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>17</source>
          <target>17</target>
          <compilerArgs>
            <arg>-Werror</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <inherited>true</inherited>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <inherited>true</inherited>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      <plugin>
        <inherited>true</inherited>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <quiet>true</quiet>
              <show>public</show>
              <detectOfflineLinks>true</detectOfflineLinks>
              <additionalOptions>
                <additionalOption>-Xdoclint:none</additionalOption>
              </additionalOptions>
              <bottom>Copyright © 2020-2023 {organizationName}. All rights reserved.</bottom>
              <doctitle>Chinook Database for Java ${project.version}</doctitle>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
              <overWriteIfNewer>true</overWriteIfNewer>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <index>true</index>
            <manifestEntries>
              <Project>${project.name}, ${project.version}</Project>
              <Author>Sualeh Fatehi, sualeh@hotmail.com</Author>
              <Implementation-Title>${project.name}</Implementation-Title>
              <Implementation-Version>${project.version}</Implementation-Version>
              <Implementation-Vendor>Sualeh Fatehi, sualeh@hotmail.com</Implementation-Vendor>
              <Main-Class>us.fatehi.chinook_database.Version</Main-Class>
              <Copyright>Copyright © 2020-2023 {organizationName}. All rights reserved.</Copyright>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <inherited>true</inherited>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <configuration>
          <!-- Prevent `gpg` from using pinentry programs -->
          <gpgArguments>
            <arg>--pinentry-mode</arg>
            <arg>loopback</arg>
          </gpgArguments>
          <skip>${skip.signing.artifacts}</skip>
        </configuration>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <serverId>sonatype-nexus</serverId>
          <nexusUrl>https://oss.sonatype.org</nexusUrl>
          <autoReleaseAfterClose>true</autoReleaseAfterClose>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>